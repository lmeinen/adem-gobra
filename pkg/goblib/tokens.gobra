// +gobra
// ##(--onlyFilesWithHeader)
package goblib

import (
    "term"
)

type Bytes domain {
    // TODO: Add patterns as we go along
}

// Models a surjective homomorphism which maps (fresh and public) names to bytestrings and the signature's symbols to functions on bytestrings
type Gamma domain {
    func gamma(term.Term) Bytes

    func oneTerm(Bytes) term.Term

    axiom { // totality
        forall t Bytes :: {oneTerm(t)} gamma(oneTerm(t)) == t
    }

    // TODO: Add an entry for each function symbol
    axiom { // homomorphism
        (true)
    }
}