// +gobra
// ##(--onlyFilesWithHeader)
package iospec



import . "github.com/adem-wg/adem-proto/claim"
import . "github.com/adem-wg/adem-proto/fact"
import . "github.com/adem-wg/adem-proto/term"
import . "github.com/adem-wg/adem-proto/place"
import . "github.com/adem-wg/adem-proto/pub"
import . "github.com/adem-wg/adem-proto/fresh"


pred P_AuthorityVerifier(tami_p Place, tami_rid Term, ghost tami_s mset[Fact]) {
    phiR_AuthorityVerifier_0(tami_p, tami_rid, tami_s) &&
    phiRG_AuthorityVerifier_1(tami_p, tami_rid, tami_s) &&
    phiRF_AuthorityVerifier_2(tami_p, tami_rid, tami_s) &&
    phiRF_AuthorityVerifier_3(tami_p, tami_rid, tami_s) &&
    phiRF_AuthorityVerifier_4(tami_p, tami_rid, tami_s) &&
    phiRF_AuthorityVerifier_5(tami_p, tami_rid, tami_s)
}
pred phiR_AuthorityVerifier_0(tami_p Place, tami_rid Term, ghost tami_s mset[Fact]) {
    forall rid Term, oi Term, rootKey Term, E Term, CA Term, skCA Term, Log Term, skCT Term, authPk Term, auth Term, endSignature Term, tlsPk Term, certOiSig Term, ctSigOi Term, certRootDSig Term, ctSigRootD Term, tami_lp mset[Fact], tami_ap mset[Claim], tami_rp mset[Fact] :: 
        { e_VerifyAuthorityEndorsement(tami_p, rid, oi, rootKey, E, CA, skCA, Log, skCT, authPk, auth, endSignature, tlsPk, certOiSig, ctSigOi, certRootDSig, ctSigRootD, tami_lp, tami_ap, tami_rp) } (
            (M(tami_lp, tami_s) &&
             tami_lp == mset[Fact] {
                            Setup_AuthorityVerifier(rid, oi, rootKey, E),
                            CA_AuthorityVerifier(rid, CA, skCA),
                            Log_AuthorityVerifier(rid, Log, skCT),
                            CA_AuthorityVerifier(rid, CA, skCA),
                            Log_AuthorityVerifier(rid, Log, skCT),
                            InFact_AuthorityVerifier(rid, pair(authPk, pair(pair(pubTerm(const_end_ext_pub()), pair(auth, pair(oi, rootKey))), endSignature))),
                            InFact_AuthorityVerifier(rid, pair(pair(pubTerm(const_MHTLeaf_pub()), pair(Log, pair(pair(pubTerm(const_cert_pub()), pair(CA, pair(auth, tlsPk))), certOiSig))), ctSigOi)),
                            InFact_AuthorityVerifier(rid, pair(pair(pubTerm(const_MHTLeaf_pub()), pair(Log, pair(pair(pubTerm(const_cert_pub()), pair(CA, pair(pair(auth, sha256(authPk)), tlsPk))), certRootDSig))), ctSigRootD))} &&
             tami_ap == mset[Claim] {
                            Eq(verify(endSignature, pair(pubTerm(const_end_ext_pub()), pair(auth, pair(oi, rootKey))), authPk), ok()),
                            Eq(verify(ctSigOi, pair(pubTerm(const_MHTLeaf_pub()), pair(Log, pair(pair(pubTerm(const_cert_pub()), pair(CA, pair(auth, tlsPk))), certOiSig))), pk(skCT)), ok()),
                            Eq(verify(ctSigRootD, pair(pubTerm(const_MHTLeaf_pub()), pair(Log, pair(pair(pubTerm(const_cert_pub()), pair(CA, pair(pair(auth, sha256(authPk)), tlsPk))), certRootDSig))), pk(skCT)), ok()),
                            Eq(verify(certOiSig, pair(pubTerm(const_cert_pub()), pair(CA, pair(auth, tlsPk))), pk(skCA)), ok()),
                            Eq(verify(certRootDSig, pair(pubTerm(const_cert_pub()), pair(CA, pair(pair(auth, sha256(authPk)), tlsPk))), pk(skCA)), ok()),
                            Neq(auth, oi),
                            VerifiedRootKey(auth, sha256(authPk)),
                            UsedRootKey(auth, authPk)} &&
             tami_rp == mset[Fact] {
                            St_AuthorityVerifier_0(rid),
                            AuthorityVerificationFinishedOut_AuthorityVerifier(rid, oi, rootKey, E, auth, authPk)} &&
             (verify(endSignature, pair(pubTerm(const_end_ext_pub()), pair(auth, pair(oi, rootKey))), authPk) == ok()) &&
             (verify(ctSigOi, pair(pubTerm(const_MHTLeaf_pub()), pair(Log, pair(pair(pubTerm(const_cert_pub()), pair(CA, pair(auth, tlsPk))), certOiSig))), pk(skCT)) == ok()) &&
             (verify(ctSigRootD, pair(pubTerm(const_MHTLeaf_pub()), pair(Log, pair(pair(pubTerm(const_cert_pub()), pair(CA, pair(pair(auth, sha256(authPk)), tlsPk))), certRootDSig))), pk(skCT)) == ok()) &&
             (verify(certOiSig, pair(pubTerm(const_cert_pub()), pair(CA, pair(auth, tlsPk))), pk(skCA)) == ok()) &&
             (verify(certRootDSig, pair(pubTerm(const_cert_pub()), pair(CA, pair(pair(auth, sha256(authPk)), tlsPk))), pk(skCA)) == ok()) &&
             (!(auth == oi))) ==>
            (e_VerifyAuthorityEndorsement(tami_p, rid, oi, rootKey, E, CA, skCA, Log, skCT, authPk, auth, endSignature, tlsPk, certOiSig, ctSigOi, certRootDSig, ctSigRootD, tami_lp, tami_ap, tami_rp) && 
             P_AuthorityVerifier(get_e_VerifyAuthorityEndorsement_placeDst(tami_p, rid, oi, rootKey, E, CA, skCA, Log, skCT, authPk, auth, endSignature, tlsPk, certOiSig, ctSigOi, certRootDSig, ctSigRootD, tami_lp, tami_ap, tami_rp), tami_rid, U(tami_lp, tami_rp, tami_s))))
}
pred phiRG_AuthorityVerifier_1(tami_p Place, tami_rid Term, ghost tami_s mset[Fact]) {
    forall new_x Term, new_x_1 Term, new_x_2 Term, new_x_3 Term, new_x_4 Term :: 
        { e_AuthorityVerificationFinishedOut(tami_p, tami_rid, new_x, new_x_1, new_x_2, new_x_3, new_x_4) }{ AuthorityVerificationFinishedOut_AuthorityVerifier(tami_rid, new_x, new_x_1, new_x_2, new_x_3, new_x_4) } (
            ((AuthorityVerificationFinishedOut_AuthorityVerifier(tami_rid, new_x, new_x_1, new_x_2, new_x_3, new_x_4) # tami_s) > 0) ==>
            (e_AuthorityVerificationFinishedOut(tami_p, tami_rid, new_x, new_x_1, new_x_2, new_x_3, new_x_4) && 
             P_AuthorityVerifier(get_e_AuthorityVerificationFinishedOut_placeDst(tami_p, tami_rid, new_x, new_x_1, new_x_2, new_x_3, new_x_4), tami_rid, tami_s setminus mset[Fact] {
                                                                                                                                                                             AuthorityVerificationFinishedOut_AuthorityVerifier(tami_rid, new_x, new_x_1, new_x_2, new_x_3, new_x_4)})))
}
pred phiRF_AuthorityVerifier_2(tami_p Place, tami_rid Term, ghost tami_s mset[Fact]) {
    e_CA(tami_p, tami_rid) && 
    P_AuthorityVerifier(get_e_CA_placeDst(tami_p, tami_rid), tami_rid, tami_s union mset[Fact] {
                                                                                        CA_AuthorityVerifier(tami_rid, get_e_CA_r1(tami_p, tami_rid), get_e_CA_r2(tami_p, tami_rid))})
}
pred phiRF_AuthorityVerifier_3(tami_p Place, tami_rid Term, ghost tami_s mset[Fact]) {
    e_Log(tami_p, tami_rid) && 
    P_AuthorityVerifier(get_e_Log_placeDst(tami_p, tami_rid), tami_rid, tami_s union mset[Fact] {
                                                                                         Log_AuthorityVerifier(tami_rid, get_e_Log_r1(tami_p, tami_rid), get_e_Log_r2(tami_p, tami_rid))})
}
pred phiRF_AuthorityVerifier_4(tami_p Place, tami_rid Term, ghost tami_s mset[Fact]) {
    e_InFact(tami_p, tami_rid) && 
    P_AuthorityVerifier(get_e_InFact_placeDst(tami_p, tami_rid), tami_rid, tami_s union mset[Fact] {
                                                                                            InFact_AuthorityVerifier(tami_rid, get_e_InFact_r1(tami_p, tami_rid))})
}
pred phiRF_AuthorityVerifier_5(tami_p Place, tami_rid Term, ghost tami_s mset[Fact]) {
    e_Setup_AuthorityVerifier(tami_p, tami_rid) && 
    P_AuthorityVerifier(get_e_Setup_AuthorityVerifier_placeDst(tami_p, tami_rid), tami_rid, tami_s union mset[Fact] {
                                                                                                             Setup_AuthorityVerifier(tami_rid, get_e_Setup_AuthorityVerifier_r1(tami_p, tami_rid), get_e_Setup_AuthorityVerifier_r2(tami_p, tami_rid), get_e_Setup_AuthorityVerifier_r3(tami_p, tami_rid))})
}